@model RestaurantSys.Models.Order

@{
    ViewData["Title"] = "訂單詳情";
    // 總金額就是所有餐點明細的小計總和
    var totalAmount = Model.OrderDetails.Sum(od => od.Quantity * od.UnitPrice);

    // 根據訂單狀態設定徽章顏色
    var statusBadgeClass = Model.OrderStatusID switch
    {
        "01" => "bg-secondary", // 待處理
        "02" => "bg-primary",   // 準備中
        "03" => "bg-warning",   // 未取餐
        "04" => "bg-success",   // 已取餐
        "05" => "bg-danger",    // 已取消
        _ => "bg-secondary"
    };
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-10">
            <div class="mb-4">
                <div class="d-flex align-items-center mb-2">
                    <i class="fas fa-receipt text-primary fs-2 me-3"></i>
                    <h1 class="display-6 fw-bold text-dark mb-0">訂單詳情</h1>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="bg-primary bg-opacity-10 me-3">
                                <i class="fas fa-hashtag text-primary fs-5"></i>
                            </div>
                            <div>
                                <h2 class="h4 fw-semibold mb-1">訂單 #@Model.OrderID</h2>
                                <small class="text-muted">@Model.OrderDate.ToString("yyyy年MM月dd日 HH:mm")</small>
                            </div>
                        </div>
                        <span class="badge @statusBadgeClass status-badge">
                            @if (Model.OrderStatusID == "04")
                            {
                                <i class="fas fa-check-circle me-1"></i>
                            }
                            else if (Model.OrderStatusID == "05")
                            {
                                <i class="fas fa-times-circle me-1"></i>
                            }
                            else
                            {
                                <i class="fas fa-spinner fa-spin me-1"></i>
                            }
                            @Html.DisplayFor(model => model.OrderStatus.OrderStatusName)
                        </span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12 col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title h5 fw-semibold mb-3">
                                <i class="fas fa-info-circle text-primary me-2"></i>基本資訊
                            </h3>
                            <div class="row g-3">
                                <div class="col-12 col-md-6">
                                    <div class="info-item d-flex align-items-center">
                                        <i class="fas fa-calendar text-muted me-3"></i>
                                        <div>
                                            <small class="text-muted d-block">訂單日期</small>
                                            <span class="fw-medium">@Model.OrderDate.ToString("yyyy年MM月dd日")</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6">
                                    <div class="info-item d-flex align-items-center">
                                        <i class="fas fa-clock text-muted me-3"></i>
                                        <div>
                                            <small class="text-muted d-block">取餐時間</small>
                                            @if (Model.OrderDetails.Any(od => od.GetTime.HasValue))
                                            {
                                                <span class="fw-medium text-success">@Model.OrderDetails.FirstOrDefault(od => od.GetTime.HasValue).GetTime?.ToString("yyyy/MM/dd HH:mm") (實際)</span>
                                            }
                                            else
                                            {
                                                <span class="fw-medium">@Model.PickUpTime.ToString("yyyy/MM/dd HH:mm") (預計)</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6">
                                    <div class="info-item d-flex align-items-center">
                                        <i class="fas fa-user text-muted me-3"></i>
                                        <div>
                                            <small class="text-muted d-block">會員編號</small>
                                            <span class="fw-medium">@Html.DisplayFor(model => model.Member.MemberID)</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6">
                                    <div class="info-item d-flex align-items-center">
                                        <i class="fas fa-credit-card text-muted me-3"></i>
                                        <div>
                                            <small class="text-muted d-block">付款方式</small>
                                            <span class="fw-medium">@Html.DisplayFor(model => model.PayType.PayTypeName)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(Model.Note))
                            {
                                <div class="note-section mt-3">
                                    <div class="d-flex align-items-start">
                                        <i class="fas fa-sticky-note text-warning me-2 mt-1"></i>
                                        <div>
                                            <small class="fw-medium text-warning-emphasis d-block">備註</small>
                                            <span class="text-warning-emphasis">@Html.DisplayFor(model => model.Note)</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title h5 fw-semibold mb-3">
                                <i class="fas fa-utensils text-primary me-2"></i>餐點明細
                            </h3>
                            
                            @foreach (var detail in Model.OrderDetails)
                            {
                                <div class="dish-item d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
                                    <div class="d-flex align-items-center">
                                        <div class="icon-circle bg-light me-3">
                                            <i class="fas fa-cookie-bite text-secondary"></i>
                                        </div>
                                        <div>
                                            <h6 class="fw-medium mb-1">@Html.DisplayFor(modelItem => detail.Dish.DishName)</h6>
                                            <small class="text-muted">
                                                NT$ @(detail.UnitPrice.ToString("N0"))
                                            </small>

                                        </div>
                                    </div>
                                    <div class="text-end">
                                        <small class="text-muted d-block">數量: @detail.Quantity</small>
                                        <span class="fw-semibold">NT$ @(Math.Round(detail.UnitPrice * detail.Quantity, 0).ToString("N0"))</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-12 col-lg-4">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title h5 fw-semibold mb-3">
                                <i class="fas fa-calculator text-primary me-2"></i>金額摘要
                            </h3>
                            <div class="d-flex justify-content-between">
                                <span class="h5 fw-bold">總計</span>
                                <span class="h5 fw-bold text-primary">NT$ @totalAmount.ToString("N0")</span>
                            </div>
                        </div>
                    </div>

                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                @* <a asp-action="Edit" asp-route-id="@Model?.OrderID" class="btn btn-primary">
                                    <i class="fas fa-edit me-2"></i>編輯訂單
                                </a> *@
                                <button class="btn btn-outline-secondary" type="button" onclick="window.print()">
                                    <i class="fas fa-print me-2"></i>列印收據
                                </button>
                                <a asp-controller="Orders" asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>返回列表
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>