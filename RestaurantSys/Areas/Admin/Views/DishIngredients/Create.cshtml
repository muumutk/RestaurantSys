@model RestaurantSys.Areas.Admin.ViewModels.VMDishIngredient

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>DishIngredient</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" id="mainForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DishID" class="control-label"></label>
                <select asp-for="DishID" class="form-control" asp-items="ViewBag.DishID"></select>
                <span asp-validation-for="DishID" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <label class="control-label">新增食材</label>
                <div class="input-group">
                    <select id="addItemSelect" class="form-control" asp-items="ViewBag.ItemID">
                        <option value="">請選擇一個食材</option>
                    </select>
                    <div class="input-group-append">
                        <button type="button" id="openModalBtn" class="btn btn-primary">選擇</button>
                    </div>
                </div>
            </div>

            <hr />
            <h3>已新增的食材</h3>
            <div id="selectedItemsContainer" class="d-flex flex-wrap gap-2">
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="建立" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="itemModal" tabindex="-1" role="dialog" aria-labelledby="itemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="itemModalLabel">輸入食材用量</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>食材名稱：<strong id="modalItemName"></strong></p>
                <div class="form-group">
                    <label for="modalQuantity">數量</label>
                    <input type="number" class="form-control" id="modalQuantity" required min="1" />
                </div>
                <div class="form-group">
                    <label for="modalUnit">單位</label>
                    <input type="text" class="form-control" id="modalUnit" maxlength="10" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="confirmAddItemBtn">確認</button>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">回到清單</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addItemSelect = document.getElementById('addItemSelect');
            const openModalBtn = document.getElementById('openModalBtn');
            const itemModal = document.getElementById('itemModal');
            const confirmAddItemBtn = document.getElementById('confirmAddItemBtn');
            const modalItemName = document.getElementById('modalItemName');
            const modalQuantity = document.getElementById('modalQuantity');
            const modalUnit = document.getElementById('modalUnit');
            const selectedItemsContainer = document.getElementById('selectedItemsContainer');

            let currentItemID = null;
            let currentItemName = '';

            // 步驟1：點擊「選擇」按鈕，打開 Modal
            openModalBtn.addEventListener('click', function () {
                const selectedOption = addItemSelect.options[addItemSelect.selectedIndex];
                const itemID = selectedOption.value;
                const itemName = selectedOption.text;

                if (!itemID) {
                    alert('請先選擇一個食材');
                    return;
                }

                // 檢查是否已存在
                if (document.querySelector(`[data-item-id="${itemID}"]`)) {
                    alert('此食材已存在於清單中');
                    return;
                }

                currentItemID = itemID;
                currentItemName = itemName;
                modalItemName.textContent = itemName;
                modalQuantity.value = ''; // 清空數量欄位
                modalUnit.value = ''; // 清空單位欄位

                // 使用 AJAX 抓取單位
                fetch(`/Admin/DishIngredients/GetItemUnit?itemID=${currentItemID}`)
                    .then(response => response.json())
                    .then(data => {
                        modalUnit.value = data.unit || '';
                        // 使用 jQuery 語法顯示 Modal
                        $(itemModal).modal('show');
                    })
                    .catch(error => {
                        console.error('Error fetching item unit:', error);
                        alert('無法取得食材單位，請稍後再試。');
                        $(itemModal).modal('hide');
                    });
            });

            // 步驟2：點擊 Modal 中的「確認」按鈕
            confirmAddItemBtn.addEventListener('click', function () {
                const quantity = modalQuantity.value;
                const unit = modalUnit.value;

                if (!quantity || quantity <= 0) {
                    alert('數量必須大於0');
                    return;
                }

                // 動態新增項目到清單
                addItemToContainer(currentItemID, currentItemName, quantity, unit);
                // 使用 jQuery 語法隱藏 Modal
                $(itemModal).modal('hide');
            });

            // 處理移除食材的點擊事件
            selectedItemsContainer.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-item-btn')) {
                    e.target.closest('.btn-group').remove();
                    reindexItems();
                }
            });

            // 動態新增項目到清單
            function addItemToContainer(itemID, itemName, quantity, unit) {
                const itemCounter = selectedItemsContainer.children.length;
                const itemHtml = `
                    <div class="btn-group" role="group" data-item-id="${itemID}">
                        <button type="button" class="btn btn-secondary">
                            ${itemName} (${quantity} ${unit})
                        </button>
                        <button type="button" class="btn btn-danger remove-item-btn">
                            &times;
                        </button>
                        <input type="hidden" name="Items[${itemCounter}].ItemID" value="${itemID}" />
                        <input type="hidden" name="Items[${itemCounter}].Quantity" value="${quantity}" />
                        <input type="hidden" name="Items[${itemCounter}].Unit" value="${unit}" />
                    </div>
                `;
                selectedItemsContainer.insertAdjacentHTML('beforeend', itemHtml);
            }

            // 重新整理所有已選食材的索引
            function reindexItems() {
                const items = selectedItemsContainer.querySelectorAll('.btn-group');
                items.forEach((item, index) => {
                    const inputs = item.querySelectorAll('input');
                    inputs.forEach(input => {
                        const originalName = input.name;
                        if (originalName) {
                            input.name = originalName.replace(/Items\[\d+\]/, `Items[${index}]`);
                        }
                    });
                });
            }
        });

    </script>
}