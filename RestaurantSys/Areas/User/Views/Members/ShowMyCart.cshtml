@{
    ViewData["Title"] = "我的購物車";
}

<h1 class="text-center">@ViewData["Title"]</h1>

<div id="cart-container" class="mt-4">
</div>

@section Scripts {
    <script>
        // 金額格式化工具
        let toNTD = new Intl.NumberFormat('zh-TW', {
            style: 'currency',
            currency: 'TWD',
            minimumFractionDigits: 0
        });

        // 顯示購物車內容的主函數
                function showMyCart() {
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let comfirmOrderUrl = '@Url.Action("ComfirmOrder", "Orders", new { area = "User" })';
            let continueShoppingUrl = '@Url.Action("Index", "Menu", new { area = "" })';

            let items = '';
            let sum = 0;
            let counter = 1;

            if (cart.length === 0) {
                document.getElementById('cart-container').innerHTML = `
                    <div class="alert alert-warning text-center" role="alert">
                        目前沒有任何商品喔，快去新增餐點吧！
                    </div>
                `;
            } else {
                // 先建立表格的開頭部分
                items += `
                    <div class="table-responsive">
                        <table class="table table-hover" id="myCart">
                            <thead>
                                <tr>
                                    <th>序號</th>
                                    <th>菜色名稱</th>
                                    <th>單價</th>
                                    <th>數量</th>
                                    <th>小計</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>`;

                // 這裡迴圈處理每一項商品
                for (let item of cart) {
                    let subtotal = item.DishPrice * item.Qty;
                    sum += subtotal;

                    items += `<tr>
                        <td>${counter++}</td>
                        <td>${item.DishName}</td>
                        <td>${toNTD.format(item.DishPrice)}</td>
                        <td>
                            <div class="input-group input-group-sm" style="width: 130px;">
                                <button class="btn btn-outline-secondary" type="button" onclick="changeQty(${item.DishID}, -1)">-</button>
                                <input type="text" class="form-control text-center cart-qty" value="${item.Qty}"
                                        data-dish-id="${item.DishID}" readonly>
                                <button class="btn btn-outline-secondary" type="button" onclick="changeQty(${item.DishID}, 1)">+</button>
                            </div>
                        </td>
                        <td><span class="text-danger fw-bold subtotal-price">${toNTD.format(subtotal)}</span></td>
                        <td>
                            <button class="btn btn-danger btn-sm" onclick="confirmRemove(${item.DishID})">
                                <i class="bi bi-trash3"></i> 移除
                            </button>
                        </td>
                    </tr>`;
                }

                // 在表格的結尾部分，加入總計與結帳按鈕
                items += `</tbody>
                        <tfoot>
                            <tr>
                                <td colspan="4" class="text-end fw-bold">總計：</td>
                                <td colspan="2"><h4 class="text-danger fw-bold" id="total-sum">${toNTD.format(sum)}</h4></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="d-flex justify-content-end mt-3">
                     <a href="${continueShoppingUrl}" class="btn btn-outline-dark">
                        <i class="bi bi-shop"></i> 再繼續逛逛
                    </a>
                    <a href="${comfirmOrderUrl}" class="btn btn-outline-dark">
                        <i class="bi bi-credit-card"></i> 前往結帳
                    </a>
                </div>
                `;

                document.getElementById('cart-container').innerHTML = items;
            }
        }

        // 透過 +/- 按鈕修改數量
        function changeQty(dishID, change) {
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let item = cart.find(i => i.DishID === dishID);

            if (item) {
                // 如果數量為1且點擊-號，則呼叫刪除確認函式
                if (item.Qty === 1 && change === -1) {
                    confirmRemove(dishID);
                } else {
                    item.Qty = Math.max(1, item.Qty + change); // 數量至少為1
                    localStorage.setItem("cart", JSON.stringify(cart));
                    showMyCart(); // 重新渲染畫面，更新資訊
                    CartStatusCheck(); // 更新導覽列的購物車總數
                }
            }
        }

        // 統一的刪除確認函式
        function confirmRemove(dishId) {
            if (confirm("確定要移除此商品嗎？")) {
                removeItem(dishId);
            }
        }

        // 實際執行移除商品的函式 (不含任何確認視窗)
        function removeItem(dishId) {
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let updatedCart = cart.filter(item => item.DishID !== dishId);
            localStorage.setItem("cart", JSON.stringify(updatedCart));

            // 重新載入購物車內容以更新畫面
            showMyCart();
            // 同時更新導覽列的購物車總數
            CartStatusCheck();
        }

        // 頁面載入時執行顯示購物車的函數
        showMyCart();

    </script>
}