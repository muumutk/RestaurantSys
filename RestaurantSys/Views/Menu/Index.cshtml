@model IEnumerable<RestaurantSys.DTOs.DishDTO>

@{
    ViewData["Title"] = "菜單一覽";
}

<h2 class="fw-bold">@ViewData["Title"]</h2>

<div class="container-fluid">
    <div class="row g-4">
        @foreach (var item in Model)
        {
            <div class="col-12 col-md-6 col-lg-4 d-flex">
                <div class="card w-100 border-0 shadow-sm">
                    <div class="position-relative">
                        @await Html.PartialAsync("_PhotoDisplayPartial", item)
                    </div>

                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold">@Html.DisplayFor(modelItem => item.DishName)</h5>
                        <p class="card-text text-muted">@Html.DisplayFor(modelItem => item.Description)</p>
                        <div class="mt-auto">
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <p class="text-secondary small fst-italic">@Html.DisplayFor(modelItem => item.Note)</p>
                            }
                            <h4 class="text-end fw-bold text-danger">
                                NT$ @item.DishPrice.ToString("0")
                            </h4>
                        </div>
                    </div>

                    <div class="card-footer p-0">
                        <div class="d-grid gap-2">
                            @if (User.IsInRole("Member"))
                            {
                                <div class="input-group mb-2">
                                    <button class="btn btn-outline-dark" type="button" onclick="this.parentNode.querySelector('input[type=number]').stepDown()"><i class="bi bi-dash"></i></button>
                                    <input type="number" id="quantity-@item.DishID" class="form-control text-center" value="1" min="1" style="width: 50px;" />
                                    <button class="btn btn-outline-dark" type="button" onclick="this.parentNode.querySelector('input[type=number]').stepUp()"><i class="bi bi-plus"></i></button>
                                </div>
                                <div class="d-grid">
                                    <button type="button" class="btn btn-outline-dark"
                                            onclick="addToCart(@System.Text.Json.JsonSerializer.Serialize(item))">
                                        <i class="bi bi-cart2"></i> 加入購物車
                                    </button>
                                </div>
                            }
                            else
                            {
                                <a class="btn btn-outline-dark" asp-controller="MemberLogin" asp-action="Login">登入後加入購物車</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<button onclick="scrollToTop()" id="scrollToTopBtn" title="回到頂部">
    <i class="bi bi-arrow-up"></i>
</button>

@section Scripts {
    <script>
                // 當使用者向下滾動 100px 時，顯示按鈕
        window.onscroll = function() {
            scrollFunction();
        };

        function scrollFunction() {
            const btn = document.getElementById("scrollToTopBtn");
            if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {
                btn.style.display = "block";
            } else {
                btn.style.display = "none";
            }
        }

        // 點擊按鈕時，平滑滾動回到頁面頂部
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }
    </script>
}