// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantSys.Access.Data;

#nullable disable

namespace RestaurantSys.Access.Migrations
{
    [DbContext(typeof(RestaurantSysContext))]
    [Migration("20250921104638_newDaliyStockUsage")]
    partial class newDaliyStockUsage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantSys.Models.DailyStockUsage", b =>
                {
                    b.Property<int>("UsageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsageID"));

                    b.Property<int>("DishID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UsageDate")
                        .HasColumnType("date");

                    b.HasKey("UsageID")
                        .HasName("PK_UsageID");

                    b.HasIndex("DishID");

                    b.HasIndex("ItemID");

                    b.ToTable("DailyStockUsage");
                });

            modelBuilder.Entity("RestaurantSys.Models.Dish", b =>
                {
                    b.Property<int>("DishID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DishCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DishPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("DishID")
                        .HasName("PK_DishID");

                    b.HasIndex("DishCategoryID");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("RestaurantSys.Models.DishCategory", b =>
                {
                    b.Property<int>("DishCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishCategoryID"));

                    b.Property<string>("DishCategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DishCategoryID")
                        .HasName("PK_DishCategoryID");

                    b.ToTable("DishCategory");
                });

            modelBuilder.Entity("RestaurantSys.Models.DishIngredient", b =>
                {
                    b.Property<int>("DishID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Quantity")
                        .HasMaxLength(5)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DishID", "ItemID");

                    b.HasIndex("ItemID");

                    b.ToTable("DishIngredient");
                });

            modelBuilder.Entity("RestaurantSys.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeID")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("EEmail")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EmployeeTel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsEmployed")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("EmployeeID")
                        .HasName("PK_EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RestaurantSys.Models.Member", b =>
                {
                    b.Property<string>("MemberID")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MEmail")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MemberTel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MemberID")
                        .HasName("PK_MemberID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("RestaurantSys.Models.Order", b =>
                {
                    b.Property<string>("OrderID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderStatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("PickUpTime")
                        .HasColumnType("datetime");

                    b.HasKey("OrderID")
                        .HasName("PK_OrderID");

                    b.HasIndex("MemberID");

                    b.HasIndex("OrderStatusID");

                    b.HasIndex("PayTypeID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("RestaurantSys.Models.OrderDetail", b =>
                {
                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("DishID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GetTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID", "DishID");

                    b.HasIndex("DishID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("RestaurantSys.Models.OrderStatus", b =>
                {
                    b.Property<string>("OrderStatusID")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("OrderStatusID")
                        .HasName("PK_OrderStatusID");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("RestaurantSys.Models.PayType", b =>
                {
                    b.Property<string>("PayTypeID")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("PayTypeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PayTypeID")
                        .HasName("PK_PayTypeID");

                    b.ToTable("PayType");
                });

            modelBuilder.Entity("RestaurantSys.Models.Stock", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<decimal?>("CurrentStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SafeStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ItemID")
                        .HasName("PK_StockID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("RestaurantSys.Models.StockBatch", b =>
                {
                    b.Property<int>("BatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchID"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("date");

                    b.Property<string>("BatchNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BatchID")
                        .HasName("PK_BatchID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ItemID");

                    b.ToTable("StockBatch");
                });

            modelBuilder.Entity("RestaurantSys.Models.StockBatchWarningLog", b =>
                {
                    b.Property<int>("StockBatchWarningLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockBatchWarningLogID"));

                    b.Property<int?>("BatchID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("WarningSentDate")
                        .HasColumnType("datetime");

                    b.HasKey("StockBatchWarningLogID")
                        .HasName("PK_StockBatchWarningLogID");

                    b.HasIndex("BatchID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("StockBatchWarningLog");
                });

            modelBuilder.Entity("RestaurantSys.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierTel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SupplierID")
                        .HasName("PK_SupplierID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("RestaurantSys.Models.DailyStockUsage", b =>
                {
                    b.HasOne("RestaurantSys.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.Stock", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RestaurantSys.Models.Dish", b =>
                {
                    b.HasOne("RestaurantSys.Models.DishCategory", "DishCategory")
                        .WithMany("Dishes")
                        .HasForeignKey("DishCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishCategory");
                });

            modelBuilder.Entity("RestaurantSys.Models.DishIngredient", b =>
                {
                    b.HasOne("RestaurantSys.Models.Dish", "Dish")
                        .WithMany("DishIngredients")
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.Stock", "Item")
                        .WithMany("DishIngredients")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RestaurantSys.Models.Order", b =>
                {
                    b.HasOne("RestaurantSys.Models.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.PayType", "PayType")
                        .WithMany("Orders")
                        .HasForeignKey("PayTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("OrderStatus");

                    b.Navigation("PayType");
                });

            modelBuilder.Entity("RestaurantSys.Models.OrderDetail", b =>
                {
                    b.HasOne("RestaurantSys.Models.Dish", "Dish")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantSys.Models.Stock", b =>
                {
                    b.HasOne("RestaurantSys.Models.Supplier", "Supplier")
                        .WithMany("Stocks")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RestaurantSys.Models.StockBatch", b =>
                {
                    b.HasOne("RestaurantSys.Models.Employee", "Employee")
                        .WithMany("StockBatches")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantSys.Models.Stock", "Stock")
                        .WithMany("StockBatches")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("RestaurantSys.Models.StockBatchWarningLog", b =>
                {
                    b.HasOne("RestaurantSys.Models.StockBatch", "StockBatch")
                        .WithMany()
                        .HasForeignKey("BatchID");

                    b.HasOne("RestaurantSys.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Employee");

                    b.Navigation("StockBatch");
                });

            modelBuilder.Entity("RestaurantSys.Models.Dish", b =>
                {
                    b.Navigation("DishIngredients");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RestaurantSys.Models.DishCategory", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("RestaurantSys.Models.Employee", b =>
                {
                    b.Navigation("StockBatches");
                });

            modelBuilder.Entity("RestaurantSys.Models.Member", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantSys.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RestaurantSys.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantSys.Models.PayType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestaurantSys.Models.Stock", b =>
                {
                    b.Navigation("DishIngredients");

                    b.Navigation("StockBatches");
                });

            modelBuilder.Entity("RestaurantSys.Models.Supplier", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
